name: Deploy Habit Tracker

on:
  push:
    branches:
      - main  # メインブランチへのプッシュで実行

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Check Firebase installation
        run: |
          if ! grep -q '"firebase":' package.json; then
            echo "Firebase package not found in package.json, installing..."
            npm install --save firebase
          fi
      
      - name: Build project
        run: npm run build
        env:
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          CI: false # ESLintの警告をエラーとして扱わない
      
      # デバッグ情報を表示
      - name: Debug directory structure
        run: |
          echo "現在のディレクトリ構造:"
          ls -la
          echo "firebase.jsonの確認:"
          cat firebase.json
      
      # Firebaseへのデプロイ
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: jp-habit-tracker
          entryPoint: '.' # リポジトリのルートディレクトリを指定
